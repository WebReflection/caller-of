{"name":"caller-of","tagline":"The tiniest yet most powerful JS utility ever :D","body":"caller-of\r\n=========\r\n\r\nThe tiniest yet most powerful JS utility ever :D\r\n\r\n```JavaScript\r\n/*! (C) WebReflection, Mit Style License */\r\nfunction callerOf(c) {'use strict'; return c.bind.call(c.call, c); }\r\n```\r\n\r\n### What Does Above Code Do\r\nHere is what we usually do\r\n```JavaScript\r\nobject.hasOwnProperty(key)\r\n```\r\nHere is what `callerOf` create\r\n```JavaScript\r\nhasOwnProperty(object, key)\r\n```\r\nso we can borrow any method at any time and reuse it in a minifier friendly way.\r\n\r\n```JavaScript\r\nvar bind = callerOf(Function.bind);\r\n\r\n// easy log\r\nvar log = bind(console.log, console);\r\nlog('it works');\r\n\r\n// common borrowed methods\r\nvar\r\n  has = callerOf({}.hasOwnProperty),\r\n  whoIs = callerOf({}.toString),\r\n  forEach = callerOf([].forEach),\r\n  slice = callerOf([].slice);\r\n\r\nhas({a:1}, \"a\"); // true\r\nhas({a:1}, \"toString\"); // false\r\n\r\nwhoIs([]);    // \"[object Array]\"\r\nwhoIs(false); // \"[object Boolean]\"\r\n\r\nslice(document.querySelectorAll(\"*\")); // array\r\n(function (obj){\r\n  var args = slice(arguments, 1);\r\n}());\r\n\r\nforEach(document.getElementsByTagName(\"body\"), log);\r\n```\r\n\r\n### Compatibility\r\nEvery JavaScript engine I know, included IE.\r\n\r\nFor *node.js* simply `npm install caller-of` then `var callerOf = require('caller-of')`\r\n\r\n### What If No Function.prototype.bind\r\nYou can use this tiny yet working polyfill ^_^\r\n```JavaScript\r\n// 139 bytes gzipped\r\n/*! (C) WebReflection, Mit Style License */\r\n(function (P) {\r\n  'use strict';\r\n  if (!P.bind) {\r\n    P.bind = function (s) {\r\n      var\r\n        c = this,\r\n        l = [].slice,\r\n        a = l.call(arguments, 1);\r\n      return function bind() {\r\n        return c.apply(s, a.concat(l.call(arguments)));\r\n      };\r\n    };\r\n  }\r\n}(Function.prototype));\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}